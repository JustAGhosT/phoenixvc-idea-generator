"use strict";(self.webpackChunkmy_v0_project=self.webpackChunkmy_v0_project||[]).push([[844],{"./node_modules/.pnpm/css-loader@6.11.0_webpack@5.99.6_esbuild@0.25.3_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/components/data-visualization/line-chart/LineChart.module.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_pnpm_css_loader_6_11_0_webpack_5_99_6_esbuild_0_25_3_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/css-loader@6.11.0_webpack@5.99.6_esbuild@0.25.3_/node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_pnpm_css_loader_6_11_0_webpack_5_99_6_esbuild_0_25_3_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_pnpm_css_loader_6_11_0_webpack_5_99_6_esbuild_0_25_3_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_pnpm_css_loader_6_11_0_webpack_5_99_6_esbuild_0_25_3_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/css-loader@6.11.0_webpack@5.99.6_esbuild@0.25.3_/node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_pnpm_css_loader_6_11_0_webpack_5_99_6_esbuild_0_25_3_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_pnpm_css_loader_6_11_0_webpack_5_99_6_esbuild_0_25_3_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".GgqJczFmNIupYAkUiXB2 {\n  width: 100%;\n  padding: 1rem;\n  background-color: var(--background-color, #ffffff);\n  box-shadow: var(--shadow-sm, 0 1px 2px 0 rgba(0, 0, 0, 0.05));\n}\n\n.OBfU1QZiixUZEzrE5xzO {\n  margin-bottom: 1rem;\n}\n\n.ZNkZqegyWa6A2mKDYoKu {\n  font-weight: 600;\n  font-size: 1rem;\n  margin-bottom: 0.5rem;\n}\n\n.vvYJRYOZHSrlIVzSGemg {\n  color: var(--text-secondary, #64748b);\n  font-size: 0.875rem;\n  margin-bottom: 1rem;\n}\n\n.rJCyebgnqiuKwbQyDnEo {\n  transition: opacity 0.3s ease;\n}\n\n.IZovP_gnr4Ow6uxaBCX2 {\n  fill: none;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  transition: opacity 0.2s ease;\n}\n\n.FcPgfT7_DgpEwV4lyyfK:hover {\n  opacity: 0.8;\n}\n\n.khg42VTAVtt0faPpXZGh {\n  opacity: 0.2;\n  transition: opacity 0.2s ease;\n}\n\n.O10BVGvFJrOvEcpaFqoH:hover {\n  opacity: 0.3;\n}\n\n.pIFvsNsmxgDyPnf4NISs {\n  transition: r 0.2s ease, opacity 0.2s ease;\n  cursor: pointer;\n}\n\n.OPDMQ7f7yvpSXzcDO_8s:hover {\n  opacity: 0.8;\n}\n\n.btI6wP1XjgkzaAkHDWuv {\n  fill: var(--text-secondary, #64748b);\n  font-size: 14px;\n}\n\n/* Data labels */\n.ZFYr5BKspTOGghS2q4TE {\n  fill: var(--text-color, #334155);\n  font-size: 10px;\n  text-anchor: middle;\n  pointer-events: none;\n}\n\n/* Legend */\n.rVY25IRT0f1hrak3ijq2 {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-top: 1rem;\n}\n\n.oXvrobeH1dE3c2rymKl3 {\n  display: flex;\n  align-items: center;\n  font-size: 0.75rem;\n  color: var(--text-secondary, #64748b);\n  margin-right: 1rem;\n  transition: opacity 0.2s ease;\n}\n\n.J_MqOj4ChkDOEtIs5BrW.jtT5oVrus_vloAANt0TS {\n  cursor: pointer;\n}\n\n.J_MqOj4ChkDOEtIs5BrW.n6hW9q4BwMzT7YVgysZr:hover {\n  opacity: 0.8;\n}\n\n.gImXB8NHhgWbL6cBvjxx {\n  display: flex;\n  align-items: center;\n  margin-right: 0.5rem;\n}\n\n.ZrVe11pSZzWgIB_DcjvC {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 150px;\n}","",{version:3,sources:["webpack://./src/components/data-visualization/line-chart/LineChart.module.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,aAAa;EACb,kDAAkD;EAClD,6DAA6D;AAC/D;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,qBAAqB;AACvB;;AAEA;EACE,qCAAqC;EACrC,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,UAAU;EACV,sBAAsB;EACtB,qBAAqB;EACrB,6BAA6B;AAC/B;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,6BAA6B;AAC/B;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,0CAA0C;EAC1C,eAAe;AACjB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,oCAAoC;EACpC,eAAe;AACjB;;AAEA,gBAAgB;AAChB;EACE,gCAAgC;EAChC,eAAe;EACf,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA,WAAW;AACX;EACE,aAAa;EACb,eAAe;EACf,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,kBAAkB;EAClB,qCAAqC;EACrC,kBAAkB;EAClB,6BAA6B;AAC/B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;EACvB,gBAAgB;AAClB",sourcesContent:[".lineChartContainer {\n  width: 100%;\n  padding: 1rem;\n  background-color: var(--background-color, #ffffff);\n  box-shadow: var(--shadow-sm, 0 1px 2px 0 rgba(0, 0, 0, 0.05));\n}\n\n.lineChartHeaderContainer {\n  margin-bottom: 1rem;\n}\n\n.lineChartTitle {\n  font-weight: 600;\n  font-size: 1rem;\n  margin-bottom: 0.5rem;\n}\n\n.lineChartDescription {\n  color: var(--text-secondary, #64748b);\n  font-size: 0.875rem;\n  margin-bottom: 1rem;\n}\n\n.lineChartLinesContainer {\n  transition: opacity 0.3s ease;\n}\n\n.lineChartLine {\n  fill: none;\n  stroke-linejoin: round;\n  stroke-linecap: round;\n  transition: opacity 0.2s ease;\n}\n\n.line:hover {\n  opacity: 0.8;\n}\n\n.lineChartArea {\n  opacity: 0.2;\n  transition: opacity 0.2s ease;\n}\n\n.area:hover {\n  opacity: 0.3;\n}\n\n.lineChartPoint {\n  transition: r 0.2s ease, opacity 0.2s ease;\n  cursor: pointer;\n}\n\n.point:hover {\n  opacity: 0.8;\n}\n\n.lineChartEmpty {\n  fill: var(--text-secondary, #64748b);\n  font-size: 14px;\n}\n\n/* Data labels */\n.lineChartDataLabel {\n  fill: var(--text-color, #334155);\n  font-size: 10px;\n  text-anchor: middle;\n  pointer-events: none;\n}\n\n/* Legend */\n.lineChartLegend {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-top: 1rem;\n}\n\n.lineChartLegendItem {\n  display: flex;\n  align-items: center;\n  font-size: 0.75rem;\n  color: var(--text-secondary, #64748b);\n  margin-right: 1rem;\n  transition: opacity 0.2s ease;\n}\n\n.legendItem.lineChartInteractive {\n  cursor: pointer;\n}\n\n.legendItem.interactive:hover {\n  opacity: 0.8;\n}\n\n.lineChartLegendSymbol {\n  display: flex;\n  align-items: center;\n  margin-right: 0.5rem;\n}\n\n.lineChartLegendLabel {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 150px;\n}"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={lineChartContainer:"GgqJczFmNIupYAkUiXB2",lineChartHeaderContainer:"OBfU1QZiixUZEzrE5xzO",lineChartTitle:"ZNkZqegyWa6A2mKDYoKu",lineChartDescription:"vvYJRYOZHSrlIVzSGemg",lineChartLinesContainer:"rJCyebgnqiuKwbQyDnEo",lineChartLine:"IZovP_gnr4Ow6uxaBCX2",line:"FcPgfT7_DgpEwV4lyyfK",lineChartArea:"khg42VTAVtt0faPpXZGh",area:"O10BVGvFJrOvEcpaFqoH",lineChartPoint:"pIFvsNsmxgDyPnf4NISs",point:"OPDMQ7f7yvpSXzcDO_8s",lineChartEmpty:"btI6wP1XjgkzaAkHDWuv",lineChartDataLabel:"ZFYr5BKspTOGghS2q4TE",lineChartLegend:"rVY25IRT0f1hrak3ijq2",lineChartLegendItem:"oXvrobeH1dE3c2rymKl3",legendItem:"J_MqOj4ChkDOEtIs5BrW",lineChartInteractive:"jtT5oVrus_vloAANt0TS",interactive:"n6hW9q4BwMzT7YVgysZr",lineChartLegendSymbol:"gImXB8NHhgWbL6cBvjxx",lineChartLegendLabel:"ZrVe11pSZzWgIB_DcjvC"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./src/components/data-visualization/line-chart/__stories__/LineChart.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Animated:()=>Animated,AreaChart:()=>AreaChart,Basic:()=>Basic,CurvedLines:()=>CurvedLines,CustomStyling:()=>CustomStyling,GradientArea:()=>GradientArea,InteractiveLegend:()=>InteractiveLegend,MultiSeries:()=>MultiSeries,NoData:()=>NoData,NoPoints:()=>NoPoints,Responsive:()=>Responsive,__namedExportsOrder:()=>__namedExportsOrder,default:()=>LineChart_stories});var react=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js");const LineChartAnimation=({series,width,height,maxValue,duration=750,delay=0,easing="easeOut",enabled=!0,children})=>{const originalSeriesRef=(0,react.useRef)([]),[animatedSeries,setAnimatedSeries]=(0,react.useState)(enabled?series.map((s=>({...s,data:s.data.map((d=>({...d,value:0})))}))):series),animationRef=(0,react.useRef)(null),startTimeRef=(0,react.useRef)(null),easingFunctions={linear:t=>t,easeIn:t=>t*t,easeOut:t=>t*(2-t),easeInOut:t=>t<.5?2*t*t:(4-2*t)*t-1},animate=timestamp=>{null===startTimeRef.current&&(startTimeRef.current=timestamp);const elapsed=timestamp-startTimeRef.current,progress=Math.min(1,Math.max(0,(elapsed-delay)/duration)),easedProgress=easingFunctions[easing](progress),newAnimatedSeries=series.map(((s,seriesIndex)=>{const originalSeries=originalSeriesRef.current[seriesIndex]||{data:[]};return{...s,data:s.data.map(((d,dataIndex)=>{const originalValue=originalSeries.data[dataIndex]?.value||0,animatedValue=originalValue+(d.value-originalValue)*easedProgress;return{...d,value:animatedValue}}))}}));setAnimatedSeries(newAnimatedSeries),progress<1?animationRef.current=requestAnimationFrame(animate):setAnimatedSeries(series)};return(0,react.useEffect)((()=>{if(enabled)return originalSeriesRef.current=animatedSeries,animationRef.current=requestAnimationFrame(animate),()=>{null!==animationRef.current&&cancelAnimationFrame(animationRef.current)};setAnimatedSeries(series)}),[series,enabled]),(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:children(animatedSeries)})},parts_LineChartAnimation=LineChartAnimation;LineChartAnimation.__docgenInfo={description:"LineChartAnimation component for animating line chart elements",methods:[],displayName:"LineChartAnimation",props:{series:{required:!0,tsType:{name:"Array",elements:[{name:"ChartSeries",elements:[{name:"ChartDataPoint"}],raw:"ChartSeries<ChartDataPoint>"}],raw:"ChartSeries<ChartDataPoint>[]"},description:"Series data to animate"},width:{required:!0,tsType:{name:"number"},description:"Width of the chart area"},height:{required:!0,tsType:{name:"number"},description:"Height of the chart area"},maxValue:{required:!0,tsType:{name:"number"},description:"Maximum value for scaling"},duration:{required:!1,tsType:{name:"number"},description:"Animation duration in ms",defaultValue:{value:"750",computed:!1}},delay:{required:!1,tsType:{name:"number"},description:"Animation delay in ms",defaultValue:{value:"0",computed:!1}},easing:{required:!1,tsType:{name:"union",raw:"'linear' | 'easeIn' | 'easeOut' | 'easeInOut'",elements:[{name:"literal",value:"'linear'"},{name:"literal",value:"'easeIn'"},{name:"literal",value:"'easeOut'"},{name:"literal",value:"'easeInOut'"}]},description:"Animation easing function",defaultValue:{value:"'easeOut'",computed:!1}},enabled:{required:!1,tsType:{name:"boolean"},description:"Whether animation is enabled",defaultValue:{value:"true",computed:!1}},children:{required:!0,tsType:{name:"signature",type:"function",raw:"(animatedSeries: ChartSeries<ChartDataPoint>[]) => React.ReactNode",signature:{arguments:[{type:{name:"Array",elements:[{name:"ChartSeries",elements:[{name:"ChartDataPoint"}],raw:"ChartSeries<ChartDataPoint>"}],raw:"ChartSeries<ChartDataPoint>[]"},name:"animatedSeries"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}}},description:"Render function that receives animated series"}}};var core=__webpack_require__("./src/components/data-visualization/core/index.ts");const LineChartAxes=({series,width,height,maxValue,xAxis,yAxis,showGridLines=!0,gridLineCount=5})=>{if(!series||0===series.length||!series[0].data.length)return null;const primarySeries=series[0],dataCount=primarySeries.data.length;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[showGridLines&&(0,jsx_runtime.jsx)(core.K2,{type:"y",scale:value=>height-value/maxValue*height,width,height,tickCount:gridLineCount}),(0,jsx_runtime.jsx)(core._0,{type:"x",scale:value=>value*(width/(dataCount-1)),width,height,config:xAxis,tickValues:primarySeries.data.map((d=>d.label)),tickFormat:value=>value}),(0,jsx_runtime.jsx)(core._0,{type:"y",scale:value=>height-value/maxValue*height,width,height,config:yAxis,showGrid:!1})]})},parts_LineChartAxes=LineChartAxes;LineChartAxes.__docgenInfo={description:"LineChartAxes component for rendering the axes and grid lines in a line chart",methods:[],displayName:"LineChartAxes",props:{series:{required:!0,tsType:{name:"Array",elements:[{name:"ChartSeries",elements:[{name:"ChartDataPoint"}],raw:"ChartSeries<ChartDataPoint>"}],raw:"ChartSeries<ChartDataPoint>[]"},description:"Series data to display"},width:{required:!0,tsType:{name:"number"},description:"Width of the chart area"},height:{required:!0,tsType:{name:"number"},description:"Height of the chart area"},maxValue:{required:!0,tsType:{name:"number"},description:"Maximum value for scaling"},xAxis:{required:!1,tsType:{name:"ChartAxis"},description:"X-axis configuration"},yAxis:{required:!1,tsType:{name:"ChartAxis"},description:"Y-axis configuration"},showGridLines:{required:!1,tsType:{name:"boolean"},description:"Whether to show grid lines",defaultValue:{value:"true",computed:!1}},gridLineCount:{required:!1,tsType:{name:"number"},description:"Number of grid lines to show",defaultValue:{value:"5",computed:!1}}}};const LineChartCanvas=({width,height,margin,backgroundColor="transparent",children})=>{const actualHeight="number"==typeof height?height-60:height;return(0,jsx_runtime.jsx)(core.v,{width,height:actualHeight,margin,backgroundColor,children})},parts_LineChartCanvas=LineChartCanvas;LineChartCanvas.__docgenInfo={description:"LineChartCanvas component for rendering the chart canvas",methods:[],displayName:"LineChartCanvas",props:{width:{required:!0,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"Width of the chart"},height:{required:!0,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"Height of the chart"},margin:{required:!0,tsType:{name:"ChartMargin"},description:"Margin around the chart"},backgroundColor:{required:!1,tsType:{name:"string"},description:"Background color",defaultValue:{value:"'transparent'",computed:!1}},children:{required:!0,tsType:{name:"signature",type:"function",raw:"(width: number, height: number) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"width"},{type:{name:"number"},name:"height"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}}},description:"Render function for chart content"}}};var injectStylesIntoStyleTag=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.4_webpack@5.99.6_esbuild@0.25.3_/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.4_webpack@5.99.6_esbuild@0.25.3_/node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.4_webpack@5.99.6_esbuild@0.25.3_/node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.4_webpack@5.99.6_esbuild@0.25.3_/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.4_webpack@5.99.6_esbuild@0.25.3_/node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.4_webpack@5.99.6_esbuild@0.25.3_/node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),LineChart_module=__webpack_require__("./node_modules/.pnpm/css-loader@6.11.0_webpack@5.99.6_esbuild@0.25.3_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/components/data-visualization/line-chart/LineChart.module.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(LineChart_module.A,options);const line_chart_LineChart_module=LineChart_module.A&&LineChart_module.A.locals?LineChart_module.A.locals:void 0,LineChartContainer=({width,height,showBorder=!1,borderColor,borderWidth,borderRadius,className="",style,dataAttributes,children})=>(0,jsx_runtime.jsx)("div",{className:`${line_chart_LineChart_module.lineChartContainer} ${className}`,style:{width,height,backgroundColor:"transparent",borderRadius:borderRadius?`${borderRadius}px`:void 0,border:showBorder?`${borderWidth||1}px solid ${borderColor||"var(--border-color, #e2e8f0)"}`:void 0,...style},...dataAttributes,children}),parts_LineChartContainer=LineChartContainer;LineChartContainer.__docgenInfo={description:"LineChartContainer component for the outer container of the line chart",methods:[],displayName:"LineChartContainer",props:{width:{required:!0,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"Width of the chart"},height:{required:!0,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"Height of the chart"},showBorder:{required:!1,tsType:{name:"boolean"},description:"Whether to show a border",defaultValue:{value:"false",computed:!1}},borderColor:{required:!1,tsType:{name:"string"},description:"Border color"},borderWidth:{required:!1,tsType:{name:"number"},description:"Border width"},borderRadius:{required:!1,tsType:{name:"number"},description:"Border radius"},className:{required:!1,tsType:{name:"string"},description:"Additional CSS class",defaultValue:{value:'""',computed:!1}},style:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:"Additional inline styles"},dataAttributes:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"},description:"Data attributes"},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Children to render inside the container"}}};const LineChartHeader=({title,subtitle})=>title||subtitle?(0,jsx_runtime.jsxs)("div",{className:line_chart_LineChart_module.lineChartHeaderContainer,children:[title&&(0,jsx_runtime.jsx)("h3",{className:line_chart_LineChart_module.lineChartTitle,children:title}),subtitle&&(0,jsx_runtime.jsx)("p",{className:line_chart_LineChart_module.lineChartDescription,children:subtitle})]}):null,parts_LineChartHeader=LineChartHeader;LineChartHeader.__docgenInfo={description:"",methods:[],displayName:"LineChartHeader",props:{title:{required:!1,tsType:{name:"string"},description:""},subtitle:{required:!1,tsType:{name:"string"},description:""}}};var legend=__webpack_require__("./src/components/data-visualization/core/legend/index.ts");const LineChartLegend=({series,colors,position="bottom",layout="horizontal",interactive=!0,maxItems,onSeriesToggle,className=""})=>(0,jsx_runtime.jsx)(legend._3,{series,colors,position,layout,interactive,maxItems,symbolType:"line",onSeriesToggle,className}),parts_LineChartLegend=LineChartLegend;LineChartLegend.__docgenInfo={description:"LineChartLegend component for displaying series information",methods:[],displayName:"LineChartLegend",props:{series:{required:!0,tsType:{name:"Array",elements:[{name:"ChartSeries"}],raw:"ChartSeries[]"},description:"Series data to display in the legend"},colors:{required:!0,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:"Colors for the series"},position:{required:!1,tsType:{name:"union",raw:"'top' | 'right' | 'bottom' | 'left'",elements:[{name:"literal",value:"'top'"},{name:"literal",value:"'right'"},{name:"literal",value:"'bottom'"},{name:"literal",value:"'left'"}]},description:"Legend position",defaultValue:{value:"'bottom'",computed:!1}},layout:{required:!1,tsType:{name:"union",raw:"'horizontal' | 'vertical'",elements:[{name:"literal",value:"'horizontal'"},{name:"literal",value:"'vertical'"}]},description:"Legend layout",defaultValue:{value:"'horizontal'",computed:!1}},interactive:{required:!1,tsType:{name:"boolean"},description:"Whether items can be toggled",defaultValue:{value:"true",computed:!1}},maxItems:{required:!1,tsType:{name:"number"},description:"Maximum number of items to show before scrolling"},onSeriesToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(seriesId: string, visible: boolean) => void",signature:{arguments:[{type:{name:"string"},name:"seriesId"},{type:{name:"boolean"},name:"visible"}],return:{name:"void"}}},description:"Callback when a series is toggled"},className:{required:!1,tsType:{name:"string"},description:"Additional CSS class",defaultValue:{value:"''",computed:!1}}}};const LineChartLegendItem=({id,name,color,visible=!0,lineStyle="solid",showPoint=!0,interactive=!0,onToggle,className=""})=>{const dashArray="solid"===lineStyle?"none":"dashed"===lineStyle?"4,2":"2,2";return(0,jsx_runtime.jsxs)("div",{className:`${line_chart_LineChart_module.lineChartLegendItem} ${interactive?line_chart_LineChart_module.lineChartInteractive:""} ${className}`,onClick:()=>{interactive&&onToggle&&onToggle(id,!visible)},role:interactive?"button":void 0,tabIndex:interactive?0:void 0,onKeyDown:e=>{interactive&&onToggle&&("Enter"===e.key||" "===e.key)&&(e.preventDefault(),onToggle(id,!visible))},"aria-pressed":interactive?!visible:void 0,style:{opacity:visible?1:.5},children:[(0,jsx_runtime.jsx)("div",{className:line_chart_LineChart_module.lineChartLegendSymbol,children:(0,jsx_runtime.jsxs)("svg",{width:"24",height:"12",viewBox:"0 0 24 12",children:[(0,jsx_runtime.jsx)("line",{x1:"2",y1:"6",x2:"22",y2:"6",stroke:color,strokeWidth:"2",strokeDasharray:dashArray,strokeLinecap:"round"}),showPoint&&(0,jsx_runtime.jsx)("circle",{cx:"12",cy:"6",r:"3",fill:color,stroke:"white",strokeWidth:"1"})]})}),(0,jsx_runtime.jsx)("span",{className:line_chart_LineChart_module.lineChartLegendLabel,children:name})]})};LineChartLegendItem.__docgenInfo={description:"LineChartLegendItem component for displaying a single line chart legend entry",methods:[],displayName:"LineChartLegendItem",props:{id:{required:!0,tsType:{name:"string"},description:"Unique ID for the item"},name:{required:!0,tsType:{name:"string"},description:"Display name"},color:{required:!0,tsType:{name:"string"},description:"Color of the line"},visible:{required:!1,tsType:{name:"boolean"},description:"Whether the item is visible",defaultValue:{value:"true",computed:!1}},lineStyle:{required:!1,tsType:{name:"union",raw:"'solid' | 'dashed' | 'dotted'",elements:[{name:"literal",value:"'solid'"},{name:"literal",value:"'dashed'"},{name:"literal",value:"'dotted'"}]},description:"Line style (solid, dashed, dotted)",defaultValue:{value:"'solid'",computed:!1}},showPoint:{required:!1,tsType:{name:"boolean"},description:"Whether to show a point",defaultValue:{value:"true",computed:!1}},interactive:{required:!1,tsType:{name:"boolean"},description:"Whether the item is interactive",defaultValue:{value:"true",computed:!1}},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(id: string, visible: boolean) => void",signature:{arguments:[{type:{name:"string"},name:"id"},{type:{name:"boolean"},name:"visible"}],return:{name:"void"}}},description:"Callback when item is toggled"},className:{required:!1,tsType:{name:"string"},description:"Additional CSS class",defaultValue:{value:"''",computed:!1}}}};const processLineChartData=data=>{const isDataPoint=Array.isArray(data)&&data.length>0&&"label"in data[0]&&"value"in data[0],isSeries=Array.isArray(data)&&data.length>0&&"id"in data[0]&&"name"in data[0]&&"data"in data[0];let processedSeries=[],maxVal=0;if(isDataPoint){processedSeries=[{id:"default",name:"Default",data}],data.forEach((point=>{point.value>maxVal&&(maxVal=point.value)}))}else isSeries?(processedSeries=data,processedSeries.forEach((series=>{series.data.forEach((point=>{point.value>maxVal&&(maxVal=point.value)}))}))):(console.error("Invalid data format provided to LineChart"),processedSeries=[],maxVal=100);return{series:processedSeries,maxValue:maxVal||100}},defaultColors=["#3b82f6","#10b981","#8b5cf6","#f97316","#ef4444","#06b6d4","#ec4899","#f59e0b","#6366f1","#84cc16"],generateLinePath=(data,width,height,maxValue,curved=!1)=>{if(!data||0===data.length)return"";const dataCount=data.length,points=data.map(((point,index)=>({x:index*(width/(dataCount-1)),y:height-point.value/maxValue*height})));if(1===points.length){const{x,y}=points[0];return`M${x-1},${y} L${x+1},${y}`}let path=`M${points[0].x},${points[0].y}`;if(curved)for(let i=0;i<points.length-1;i++){const current=points[i],next=points[i+1];path+=` C${current.x+(next.x-current.x)/3},${current.y} ${next.x-(next.x-current.x)/3},${next.y} ${next.x},${next.y}`}else for(let i=1;i<points.length;i++)path+=` L${points[i].x},${points[i].y}`;return path},generateAreaPath=(data,width,height,maxValue,curved=!1)=>{if(!data||0===data.length)return"";const dataCount=data.length,points=data.map(((point,index)=>({x:index*(width/(dataCount-1)),y:height-point.value/maxValue*height})));if(1===points.length){const{x,y}=points[0];return`M${x-1},${height} L${x-1},${y} L${x+1},${y} L${x+1},${height} Z`}let path=`M${points[0].x},${height} L${points[0].x},${points[0].y}`;if(curved)for(let i=0;i<points.length-1;i++){const current=points[i],next=points[i+1];path+=` C${current.x+(next.x-current.x)/3},${current.y} ${next.x-(next.x-current.x)/3},${next.y} ${next.x},${next.y}`}else for(let i=1;i<points.length;i++)path+=` L${points[i].x},${points[i].y}`;return path+=` L${points[points.length-1].x},${height} Z`,path},LineChartLines=({series,width,height,maxValue,showArea=!1,curved=!1,lineWidth=2,useGradient=!1,colors=defaultColors})=>series&&0!==series.length?(0,jsx_runtime.jsxs)("g",{className:line_chart_LineChart_module.lineChartLinesContainer,children:[useGradient&&(0,jsx_runtime.jsx)("defs",{children:series.map(((seriesItem,seriesIndex)=>{const color=seriesItem.color||colors[seriesIndex%colors.length];return(0,jsx_runtime.jsxs)("linearGradient",{id:`line-gradient-${seriesIndex}`,x1:"0",y1:"0",x2:"0",y2:"1",children:[(0,jsx_runtime.jsx)("stop",{offset:"0%",stopColor:color,stopOpacity:1}),(0,jsx_runtime.jsx)("stop",{offset:"100%",stopColor:color,stopOpacity:.2})]},`line-gradient-${seriesIndex}`)}))}),showArea&&series.map(((seriesItem,seriesIndex)=>{if(!1===seriesItem.visible)return null;const color=seriesItem.color||colors[seriesIndex%colors.length],areaPath=generateAreaPath(seriesItem.data,width,height,maxValue,curved);return(0,jsx_runtime.jsx)("path",{className:line_chart_LineChart_module.lineChartArea,d:areaPath,fill:useGradient?`url(#line-gradient-${seriesIndex})`:color,opacity:.2,"data-testid":`line-area-${seriesItem.id||seriesIndex}`},`area-${seriesIndex}`)})),series.map(((seriesItem,seriesIndex)=>{if(!1===seriesItem.visible)return null;const color=seriesItem.color||colors[seriesIndex%colors.length],linePath=generateLinePath(seriesItem.data,width,height,maxValue,curved);return(0,jsx_runtime.jsx)("path",{className:line_chart_LineChart_module.lineChartLine,d:linePath,stroke:color,strokeWidth:lineWidth,strokeDasharray:seriesItem.dashPattern||"none",fill:"none","data-series":seriesItem.name,"data-testid":`line-path-${seriesItem.id||seriesIndex}`},`line-${seriesIndex}`)}))]}):null,parts_LineChartLines=LineChartLines;LineChartLines.__docgenInfo={description:"LineChartLines component for rendering the lines in a line chart",methods:[],displayName:"LineChartLines",props:{series:{required:!0,tsType:{name:"Array",elements:[{name:"ChartSeries",elements:[{name:"ChartDataPoint"}],raw:"ChartSeries<ChartDataPoint>"}],raw:"ChartSeries<ChartDataPoint>[]"},description:"Series data to display"},width:{required:!0,tsType:{name:"number"},description:"Width of the chart area"},height:{required:!0,tsType:{name:"number"},description:"Height of the chart area"},maxValue:{required:!0,tsType:{name:"number"},description:"Maximum value for scaling"},showArea:{required:!1,tsType:{name:"boolean"},description:"Whether to show area under the lines",defaultValue:{value:"false",computed:!1}},curved:{required:!1,tsType:{name:"boolean"},description:"Whether to use curved lines",defaultValue:{value:"false",computed:!1}},lineWidth:{required:!1,tsType:{name:"number"},description:"Line width",defaultValue:{value:"2",computed:!1}},useGradient:{required:!1,tsType:{name:"boolean"},description:"Whether to use gradient fills",defaultValue:{value:"false",computed:!1}},colors:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:"Colors for the lines",defaultValue:{value:"[\n  '#3b82f6', // blue\n  '#10b981', // green\n  '#8b5cf6', // purple\n  '#f97316', // orange\n  '#ef4444', // red\n  '#06b6d4', // cyan\n  '#ec4899', // pink\n  '#f59e0b', // amber\n  '#6366f1', // indigo\n  '#84cc16', // lime\n]",computed:!1}}}};const LineChartNoData=({width,height,message="No data available"})=>(0,jsx_runtime.jsx)("text",{x:width/2,y:height/2,textAnchor:"middle",className:line_chart_LineChart_module.lineChartEmpty,children:message}),parts_LineChartNoData=LineChartNoData;LineChartNoData.__docgenInfo={description:"LineChartNoData component for displaying a message when no data is available",methods:[],displayName:"LineChartNoData",props:{width:{required:!0,tsType:{name:"number"},description:"Width of the chart area"},height:{required:!0,tsType:{name:"number"},description:"Height of the chart area"},message:{required:!1,tsType:{name:"string"},description:"Custom message to display",defaultValue:{value:'"No data available"',computed:!1}}}};const LineChartPoints=({series,width,height,maxValue,pointRadius=4,colors=defaultColors,onPointClick,onPointMouseEnter,onPointMouseLeave})=>series&&0!==series.length?(0,jsx_runtime.jsx)("g",{className:line_chart_LineChart_module.pointsContainer,children:series.map(((seriesItem,seriesIndex)=>{const color=colors[seriesIndex%colors.length];return seriesItem.data.map(((dataPoint,dataIndex)=>{const x=dataIndex*(width/(seriesItem.data.length-1)),y=height-dataPoint.value/maxValue*height;return(0,jsx_runtime.jsx)("circle",{className:line_chart_LineChart_module.lineChartPoint,cx:x,cy:y,r:pointRadius,fill:color,stroke:"white",strokeWidth:1,onClick:()=>onPointClick?.(dataPoint,dataIndex,seriesItem),onMouseEnter:e=>onPointMouseEnter?.(e,dataPoint,seriesItem),onMouseLeave:onPointMouseLeave,"data-label":dataPoint.label,"data-value":dataPoint.value,"data-series":seriesItem.name},`point-${seriesIndex}-${dataIndex}`)}))}))}):null,parts_LineChartPoints=LineChartPoints;LineChartPoints.__docgenInfo={description:"LineChartPoints component for rendering the data points in a line chart",methods:[],displayName:"LineChartPoints",props:{series:{required:!0,tsType:{name:"Array",elements:[{name:"ChartSeries",elements:[{name:"ChartDataPoint"}],raw:"ChartSeries<ChartDataPoint>"}],raw:"ChartSeries<ChartDataPoint>[]"},description:"Series data to display"},width:{required:!0,tsType:{name:"number"},description:"Width of the chart area"},height:{required:!0,tsType:{name:"number"},description:"Height of the chart area"},maxValue:{required:!0,tsType:{name:"number"},description:"Maximum value for scaling"},pointRadius:{required:!1,tsType:{name:"number"},description:"Radius of the points",defaultValue:{value:"4",computed:!1}},colors:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:"Colors for the points",defaultValue:{value:"[\n  '#3b82f6', // blue\n  '#10b981', // green\n  '#8b5cf6', // purple\n  '#f97316', // orange\n  '#ef4444', // red\n  '#06b6d4', // cyan\n  '#ec4899', // pink\n  '#f59e0b', // amber\n  '#6366f1', // indigo\n  '#84cc16', // lime\n]",computed:!1}},onPointClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(dataPoint: ChartDataPoint, index: number, series: ChartSeries<ChartDataPoint>) => void",signature:{arguments:[{type:{name:"ChartDataPoint"},name:"dataPoint"},{type:{name:"number"},name:"index"},{type:{name:"ChartSeries",elements:[{name:"ChartDataPoint"}],raw:"ChartSeries<ChartDataPoint>"},name:"series"}],return:{name:"void"}}},description:"Callback when a point is clicked"},onPointMouseEnter:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.MouseEvent, dataPoint: ChartDataPoint, series: ChartSeries<ChartDataPoint>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent"},name:"event"},{type:{name:"ChartDataPoint"},name:"dataPoint"},{type:{name:"ChartSeries",elements:[{name:"ChartDataPoint"}],raw:"ChartSeries<ChartDataPoint>"},name:"series"}],return:{name:"void"}}},description:"Callback when mouse enters a point"},onPointMouseLeave:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.MouseEvent) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent"},name:"event"}],return:{name:"void"}}},description:"Callback when mouse leaves a point"}}};var tooltip=__webpack_require__("./src/components/data-visualization/core/tooltip/index.ts"),ChartTooltip=__webpack_require__("./src/components/data-visualization/core/tooltip/ChartTooltip.tsx");const LineChartTooltip=({visible,x,y,dataPoint,series,customContent,formatValue=value=>value.toString()})=>customContent?(0,jsx_runtime.jsx)(ChartTooltip.I,{visible,x,y,content:customContent}):dataPoint?(0,jsx_runtime.jsx)(ChartTooltip.I,{visible,x,y,content:(0,jsx_runtime.jsx)(tooltip.M9,{dataPoint,series,formatValue,showSeries:!!series,color:series?.color})}):null,parts_LineChartTooltip=LineChartTooltip;LineChartTooltip.__docgenInfo={description:"LineChartTooltip component for rendering tooltips in a line chart",methods:[],displayName:"LineChartTooltip",props:{visible:{required:!0,tsType:{name:"boolean"},description:"Whether the tooltip is visible"},x:{required:!0,tsType:{name:"number"},description:"X position of the tooltip"},y:{required:!0,tsType:{name:"number"},description:"Y position of the tooltip"},dataPoint:{required:!1,tsType:{name:"ChartDataPoint"},description:"Data point being hovered"},series:{required:!1,tsType:{name:"ChartSeries",elements:[{name:"ChartDataPoint"}],raw:"ChartSeries<ChartDataPoint>"},description:"Series the data point belongs to"},customContent:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Custom tooltip content"},formatValue:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: number) => string",signature:{arguments:[{type:{name:"number"},name:"value"}],return:{name:"string"}}},description:"Format function for values",defaultValue:{value:"(value) => value.toString()",computed:!1}}}};const LineChart=({data,title,subtitle,width="100%",height=300,showArea=!1,showPoints=!0,curved=!1,lineWidth=2,pointRadius=4,showDataLabels=!1,xAxis,yAxis,showGridLines=!0,useGradient=!1,legend,tooltip,animation={enabled:!0,duration:750,easing:"easeOut"},accessibility,margin={top:20,right:20,bottom:40,left:40},backgroundColor="transparent",showBorder=!1,borderColor,borderWidth,borderRadius,className="",style,onClick,onDataPointClick,onSeriesToggle,onRenderComplete,dataAttributes})=>{const[tooltipData,setTooltipData]=(0,react.useState)({visible:!1,x:0,y:0}),{series,maxValue}=(0,react.useMemo)((()=>processLineChartData(data)),[data]),formatValue=value=>"number"!=typeof value?"":value>=1e6?`${(value/1e6).toFixed(1)}M`:value>=1e3?`${(value/1e3).toFixed(1)}K`:value.toString(),handlePointClick=(dataPoint,index,seriesItem)=>{onDataPointClick&&onDataPointClick(dataPoint,index,seriesItem)},handlePointMouseEnter=(event,dataPoint,seriesItem)=>{const rect=event.currentTarget.getBoundingClientRect(),x=event.clientX-rect.left,y=event.clientY-rect.top;setTooltipData({visible:!0,x,y,dataPoint,series:seriesItem,content:(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h4",{children:dataPoint.label}),(0,jsx_runtime.jsxs)("p",{children:[seriesItem.name,": ",formatValue(dataPoint.value)]})]})})},handlePointMouseLeave=()=>{setTooltipData((prev=>({...prev,visible:!1})))};return(0,jsx_runtime.jsxs)(parts_LineChartContainer,{width,height,showBorder,borderColor,borderWidth,borderRadius,className,style,dataAttributes,children:[(0,jsx_runtime.jsx)(parts_LineChartHeader,{title,subtitle}),(0,jsx_runtime.jsx)(parts_LineChartCanvas,{width,height,margin,backgroundColor,children:(width,height)=>{if(width<=0||height<=0)return null;const primarySeries=series[0];if(!primarySeries||0===primarySeries.data.length)return(0,jsx_runtime.jsx)(parts_LineChartNoData,{width,height});const animationEnabled=!1!==animation?.enabled,animationDuration=animation?.duration||750,animationEasing=animation?.easing||"easeOut",renderChartContent=animatedSeries=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(parts_LineChartAxes,{series:animatedSeries,width,height,maxValue,xAxis,yAxis,showGridLines,gridLineCount:5}),(0,jsx_runtime.jsx)(parts_LineChartLines,{series:animatedSeries,width,height,maxValue,showArea,curved,lineWidth,useGradient,colors:defaultColors}),showPoints&&(0,jsx_runtime.jsx)(parts_LineChartPoints,{series:animatedSeries,width,height,maxValue,pointRadius,colors:defaultColors,onPointClick:handlePointClick,onPointMouseEnter:handlePointMouseEnter,onPointMouseLeave:handlePointMouseLeave})]});return animationEnabled?(0,jsx_runtime.jsx)(parts_LineChartAnimation,{series,width,height,maxValue,duration:animationDuration,easing:animationEasing,enabled:animationEnabled,children:renderChartContent}):renderChartContent(series)}}),series.length>1&&(0,jsx_runtime.jsx)(parts_LineChartLegend,{series,colors:defaultColors,position:legend?.position||"bottom",layout:legend?.layout||"horizontal",interactive:!1!==legend?.interactive,maxItems:legend?.maxItems,onSeriesToggle:(seriesId,visible)=>{onSeriesToggle&&onSeriesToggle(seriesId,visible)}}),(0,jsx_runtime.jsx)(parts_LineChartTooltip,{visible:tooltipData.visible,x:tooltipData.x,y:tooltipData.y,dataPoint:tooltipData.dataPoint,series:tooltipData.series,customContent:tooltipData.content,formatValue})]})};LineChart.__docgenInfo={description:"LineChart component for displaying data as lines or area charts.\n\n@example\n```tsx\n<LineChart\n  title=\"Monthly Revenue\"\n  data={[\n    { label: 'Jan', value: 1000 },\n    { label: 'Feb', value: 1500 }\n  ]}\n/>\n```",methods:[],displayName:"LineChart",props:{width:{required:!1,tsType:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}]},description:"Chart width (can be number or percentage string)",defaultValue:{value:'"100%"',computed:!1}},height:{required:!1,tsType:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}]},description:"Chart height (can be number or percentage string)",defaultValue:{value:"300",computed:!1}},title:{required:!1,tsType:{name:"string"},description:"Chart title"},subtitle:{required:!1,tsType:{name:"string"},description:"Chart subtitle"},description:{required:!1,tsType:{name:"string"},description:"Chart description (for accessibility)"},loading:{required:!1,tsType:{name:"boolean"},description:"Whether the chart is in a loading state"},error:{required:!1,tsType:{name:"string"},description:"Error message to display if chart data failed to load"},margin:{required:!1,tsType:{name:"ChartMargin"},description:"Chart margins",defaultValue:{value:"{ top: 20, right: 20, bottom: 40, left: 40 }",computed:!1}},legend:{required:!1,tsType:{name:"ChartLegend"},description:"Legend configuration"},tooltip:{required:!1,tsType:{name:"ChartTooltip"},description:"Tooltip configuration"},animation:{required:!1,tsType:{name:"ChartAnimation"},description:"Animation configuration",defaultValue:{value:"{ enabled: true, duration: 750, easing: 'easeOut' }",computed:!1}},accessibility:{required:!1,tsType:{name:"ChartAccessibility"},description:"Accessibility configuration"},backgroundColor:{required:!1,tsType:{name:"string"},description:"Background color",defaultValue:{value:"'transparent'",computed:!1}},showBorder:{required:!1,tsType:{name:"boolean"},description:"Whether to show a border",defaultValue:{value:"false",computed:!1}},borderColor:{required:!1,tsType:{name:"string"},description:"Border color"},borderWidth:{required:!1,tsType:{name:"number"},description:"Border width"},borderRadius:{required:!1,tsType:{name:"number"},description:"Border radius"},className:{required:!1,tsType:{name:"string"},description:"Additional CSS class name",defaultValue:{value:'""',computed:!1}},style:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:"Custom styles"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.MouseEvent) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent"},name:"event"}],return:{name:"void"}}},description:"Callback when chart is clicked"},onDataPointClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(dataPoint: ChartDataPoint | ExtendedChartDataPoint, index: number, series?: ChartSeries) => void",signature:{arguments:[{type:{name:"union",raw:"ChartDataPoint | ExtendedChartDataPoint",elements:[{name:"ChartDataPoint"},{name:"ExtendedChartDataPoint"}]},name:"dataPoint"},{type:{name:"number"},name:"index"},{type:{name:"ChartSeries"},name:"series"}],return:{name:"void"}}},description:"Callback when a data point is clicked"},onSeriesToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(seriesId: string, visible: boolean) => void",signature:{arguments:[{type:{name:"string"},name:"seriesId"},{type:{name:"boolean"},name:"visible"}],return:{name:"void"}}},description:"Callback when a series is toggled in the legend"},onRenderComplete:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback when chart has finished rendering"},dataAttributes:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"},description:"Additional data attributes"},data:{required:!0,tsType:{name:"union",raw:"ChartDataPoint[] | ExtendedChartDataPoint[] | ChartSeries<ChartDataPoint | ExtendedChartDataPoint>[]",elements:[{name:"Array",elements:[{name:"ChartDataPoint"}],raw:"ChartDataPoint[]"},{name:"Array",elements:[{name:"ExtendedChartDataPoint"}],raw:"ExtendedChartDataPoint[]"},{name:"Array",elements:[{name:"ChartSeries",elements:[{name:"union",raw:"ChartDataPoint | ExtendedChartDataPoint",elements:[{name:"ChartDataPoint"},{name:"ExtendedChartDataPoint"}]}],raw:"ChartSeries<ChartDataPoint | ExtendedChartDataPoint>"}],raw:"ChartSeries<ChartDataPoint | ExtendedChartDataPoint>[]"}]},description:"Data for the line chart"},showArea:{required:!1,tsType:{name:"boolean"},description:"Whether to show area under the line",defaultValue:{value:"false",computed:!1}},showPoints:{required:!1,tsType:{name:"boolean"},description:"Whether to show points on the line",defaultValue:{value:"true",computed:!1}},curved:{required:!1,tsType:{name:"boolean"},description:"Whether to use curved lines",defaultValue:{value:"false",computed:!1}},lineWidth:{required:!1,tsType:{name:"number"},description:"Line width",defaultValue:{value:"2",computed:!1}},pointRadius:{required:!1,tsType:{name:"number"},description:"Point radius",defaultValue:{value:"4",computed:!1}},showDataLabels:{required:!1,tsType:{name:"boolean"},description:"Whether to show data labels",defaultValue:{value:"false",computed:!1}},xAxis:{required:!1,tsType:{name:"ChartAxis"},description:"X-axis configuration"},yAxis:{required:!1,tsType:{name:"ChartAxis"},description:"Y-axis configuration"},showGridLines:{required:!1,tsType:{name:"boolean"},description:"Whether to show grid lines",defaultValue:{value:"true",computed:!1}},useGradient:{required:!1,tsType:{name:"boolean"},description:"Whether lines should have gradient fill",defaultValue:{value:"false",computed:!1}}}};const LineChart_stories={title:"Data Visualization/LineChart",component:LineChart,parameters:{layout:"centered"},argTypes:{data:{control:"object"},width:{control:"text"},height:{control:"number"},title:{control:"text"},subtitle:{control:"text"},showArea:{control:"boolean"},showPoints:{control:"boolean"},curved:{control:"boolean"},lineWidth:{control:"number"},pointRadius:{control:"number"},showGridLines:{control:"boolean"},useGradient:{control:"boolean"},backgroundColor:{control:"color"},showBorder:{control:"boolean"},borderColor:{control:"color"},borderWidth:{control:"number"},borderRadius:{control:"number"}}},singleSeriesData=[{label:"Jan",value:100},{label:"Feb",value:200},{label:"Mar",value:150},{label:"Apr",value:300},{label:"May",value:250},{label:"Jun",value:400}],multiSeriesData=[{id:"revenue",name:"Revenue",data:[{label:"Jan",value:100},{label:"Feb",value:200},{label:"Mar",value:150},{label:"Apr",value:300},{label:"May",value:250},{label:"Jun",value:400}]},{id:"profit",name:"Profit",data:[{label:"Jan",value:50},{label:"Feb",value:100},{label:"Mar",value:75},{label:"Apr",value:150},{label:"May",value:125},{label:"Jun",value:200}]}],Basic={args:{title:"Monthly Revenue",data:singleSeriesData,width:600,height:300}},MultiSeries={args:{title:"Monthly Performance",subtitle:"Revenue vs Profit",data:multiSeriesData,width:600,height:300}},AreaChart={args:{title:"Monthly Revenue",data:singleSeriesData,showArea:!0,width:600,height:300}},CurvedLines={args:{title:"Monthly Revenue",data:singleSeriesData,curved:!0,width:600,height:300}},GradientArea={args:{title:"Monthly Revenue",data:singleSeriesData,showArea:!0,useGradient:!0,width:600,height:300}},NoPoints={args:{title:"Monthly Revenue",data:singleSeriesData,showPoints:!1,width:600,height:300}},CustomStyling={args:{title:"Quarterly Revenue",data:[{label:"Q1",value:450},{label:"Q2",value:950},{label:"Q3",value:700},{label:"Q4",value:1200}],width:600,height:300,lineWidth:3,pointRadius:6,showBorder:!0,borderColor:"#e2e8f0",borderWidth:1,borderRadius:8,backgroundColor:"#f8fafc"}},InteractiveLegend={render:args=>{const[visibleSeries,setVisibleSeries]=(0,react.useState)({revenue:!0,profit:!0}),filteredData=multiSeriesData.map((series=>({...series,visible:visibleSeries[series.id]})));return(0,jsx_runtime.jsx)(LineChart,{...args,data:filteredData,onSeriesToggle:(seriesId,visible)=>{setVisibleSeries((prev=>({...prev,[seriesId]:visible})))}})},args:{title:"Monthly Performance",subtitle:"Click legend items to toggle series",width:600,height:300}},Animated={args:{title:"Monthly Revenue",data:singleSeriesData,width:600,height:300,animation:{enabled:!0,duration:1e3,easing:"easeOut"}}},NoData={args:{title:"Monthly Revenue",data:[],width:600,height:300}},Responsive={args:{title:"Monthly Revenue",data:singleSeriesData,width:"100%",height:300}},__namedExportsOrder=["Basic","MultiSeries","AreaChart","CurvedLines","GradientArea","NoPoints","CustomStyling","InteractiveLegend","Animated","NoData","Responsive"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Monthly Revenue',\n    data: singleSeriesData,\n    width: 600,\n    height: 300\n  }\n}",...Basic.parameters?.docs?.source}}},MultiSeries.parameters={...MultiSeries.parameters,docs:{...MultiSeries.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Monthly Performance',\n    subtitle: 'Revenue vs Profit',\n    data: multiSeriesData,\n    width: 600,\n    height: 300\n  }\n}",...MultiSeries.parameters?.docs?.source}}},AreaChart.parameters={...AreaChart.parameters,docs:{...AreaChart.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Monthly Revenue',\n    data: singleSeriesData,\n    showArea: true,\n    width: 600,\n    height: 300\n  }\n}",...AreaChart.parameters?.docs?.source}}},CurvedLines.parameters={...CurvedLines.parameters,docs:{...CurvedLines.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Monthly Revenue',\n    data: singleSeriesData,\n    curved: true,\n    width: 600,\n    height: 300\n  }\n}",...CurvedLines.parameters?.docs?.source}}},GradientArea.parameters={...GradientArea.parameters,docs:{...GradientArea.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Monthly Revenue',\n    data: singleSeriesData,\n    showArea: true,\n    useGradient: true,\n    width: 600,\n    height: 300\n  }\n}",...GradientArea.parameters?.docs?.source}}},NoPoints.parameters={...NoPoints.parameters,docs:{...NoPoints.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Monthly Revenue',\n    data: singleSeriesData,\n    showPoints: false,\n    width: 600,\n    height: 300\n  }\n}",...NoPoints.parameters?.docs?.source}}},CustomStyling.parameters={...CustomStyling.parameters,docs:{...CustomStyling.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Quarterly Revenue',\n    data: quarterlyData,\n    width: 600,\n    height: 300,\n    lineWidth: 3,\n    pointRadius: 6,\n    showBorder: true,\n    borderColor: '#e2e8f0',\n    borderWidth: 1,\n    borderRadius: 8,\n    backgroundColor: '#f8fafc'\n  }\n}",...CustomStyling.parameters?.docs?.source}}},InteractiveLegend.parameters={...InteractiveLegend.parameters,docs:{...InteractiveLegend.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const [visibleSeries, setVisibleSeries] = useState<Record<string, boolean>>({\n      revenue: true,\n      profit: true\n    });\n    const handleSeriesToggle = (seriesId: string, visible: boolean) => {\n      setVisibleSeries(prev => ({\n        ...prev,\n        [seriesId]: visible\n      }));\n    };\n    const filteredData = multiSeriesData.map(series => ({\n      ...series,\n      visible: visibleSeries[series.id]\n    }));\n    return <LineChart {...args} data={filteredData} onSeriesToggle={handleSeriesToggle} />;\n  },\n  args: {\n    title: 'Monthly Performance',\n    subtitle: 'Click legend items to toggle series',\n    width: 600,\n    height: 300\n  }\n}",...InteractiveLegend.parameters?.docs?.source}}},Animated.parameters={...Animated.parameters,docs:{...Animated.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Monthly Revenue',\n    data: singleSeriesData,\n    width: 600,\n    height: 300,\n    animation: {\n      enabled: true,\n      duration: 1000,\n      easing: 'easeOut'\n    }\n  }\n}",...Animated.parameters?.docs?.source}}},NoData.parameters={...NoData.parameters,docs:{...NoData.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Monthly Revenue',\n    data: [],\n    width: 600,\n    height: 300\n  }\n}",...NoData.parameters?.docs?.source}}},Responsive.parameters={...Responsive.parameters,docs:{...Responsive.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Monthly Revenue',\n    data: singleSeriesData,\n    width: '100%',\n    height: 300\n  }\n}",...Responsive.parameters?.docs?.source}}}}}]);