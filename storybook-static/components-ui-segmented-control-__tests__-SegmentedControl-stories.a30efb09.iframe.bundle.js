"use strict";(self.webpackChunkmy_v0_project=self.webpackChunkmy_v0_project||[]).push([[573],{"./node_modules/.pnpm/css-loader@6.11.0_webpack@5.99.6_esbuild@0.25.3_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/components/ui/segmented-control/SegmentedControl.module.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_pnpm_css_loader_6_11_0_webpack_5_99_6_esbuild_0_25_3_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/css-loader@6.11.0_webpack@5.99.6_esbuild@0.25.3_/node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_pnpm_css_loader_6_11_0_webpack_5_99_6_esbuild_0_25_3_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_pnpm_css_loader_6_11_0_webpack_5_99_6_esbuild_0_25_3_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_pnpm_css_loader_6_11_0_webpack_5_99_6_esbuild_0_25_3_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/css-loader@6.11.0_webpack@5.99.6_esbuild@0.25.3_/node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_pnpm_css_loader_6_11_0_webpack_5_99_6_esbuild_0_25_3_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_pnpm_css_loader_6_11_0_webpack_5_99_6_esbuild_0_25_3_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".sWF9DcCbd2erXzj786cf {\n  display: inline-block;\n  position: relative;\n  /* Avoid unnecessary hardware acceleration when not needed */\n  transform: translateZ(0);\n  will-change: auto;\n}\n\n/* Use direct child selectors for better performance */\n.sWF9DcCbd2erXzj786cf > .FdnZSJiYBFIpr4b45MvH {\n  width: 100%;\n}\n\n/* Optimize transitions for better performance */\n.sWF9DcCbd2erXzj786cf button {\n  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;\n}\n\n/* Optimize for reduced motion */\n@media (prefers-reduced-motion: reduce) {\n  .sWF9DcCbd2erXzj786cf button {\n    transition: none;\n  }\n}\n\n/* Use hardware acceleration only for hover effects */\n.sWF9DcCbd2erXzj786cf button:hover {\n  transform: translateZ(0);\n}\n\n/* Use efficient selectors */\n.FdnZSJiYBFIpr4b45MvH {\n  /* Efficient selectors for better performance */\n}","",{version:3,sources:["webpack://./src/components/ui/segmented-control/SegmentedControl.module.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,4DAA4D;EAC5D,wBAAwB;EACxB,iBAAiB;AACnB;;AAEA,sDAAsD;AACtD;EACE,WAAW;AACb;;AAEA,gDAAgD;AAChD;EACE,+EAA+E;AACjF;;AAEA,gCAAgC;AAChC;EACE;IACE,gBAAgB;EAClB;AACF;;AAEA,qDAAqD;AACrD;EACE,wBAAwB;AAC1B;;AAEA,4BAA4B;AAC5B;EACE,+CAA+C;AACjD",sourcesContent:[".segmentedControl {\n  display: inline-block;\n  position: relative;\n  /* Avoid unnecessary hardware acceleration when not needed */\n  transform: translateZ(0);\n  will-change: auto;\n}\n\n/* Use direct child selectors for better performance */\n.segmentedControl > .segmentedControlButtonGroup {\n  width: 100%;\n}\n\n/* Optimize transitions for better performance */\n.segmentedControl button {\n  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;\n}\n\n/* Optimize for reduced motion */\n@media (prefers-reduced-motion: reduce) {\n  .segmentedControl button {\n    transition: none;\n  }\n}\n\n/* Use hardware acceleration only for hover effects */\n.segmentedControl button:hover {\n  transform: translateZ(0);\n}\n\n/* Use efficient selectors */\n.segmentedControlButtonGroup {\n  /* Efficient selectors for better performance */\n}"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={segmentedControl:"sWF9DcCbd2erXzj786cf",segmentedControlButtonGroup:"FdnZSJiYBFIpr4b45MvH"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./src/components/ui/segmented-control/__tests__/SegmentedControl.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Colors:()=>Colors,Default:()=>Default,DisabledState:()=>DisabledState,FullWidth:()=>FullWidth,GhostVariant:()=>GhostVariant,IconsOnly:()=>IconsOnly,IndividualDisabledOptions:()=>IndividualDisabledOptions,Playground:()=>Playground,RealWorldExample:()=>RealWorldExample,Sizes:()=>Sizes,WithIcons:()=>WithIcons,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SegmentedControl_stories});var react=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),classnames=__webpack_require__("./src/utils/classnames.ts"),Button=__webpack_require__("./src/components/ui/button/Button.tsx"),ButtonGroup=__webpack_require__("./src/components/ui/button-group/ButtonGroup.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.4_webpack@5.99.6_esbuild@0.25.3_/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.4_webpack@5.99.6_esbuild@0.25.3_/node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.4_webpack@5.99.6_esbuild@0.25.3_/node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.4_webpack@5.99.6_esbuild@0.25.3_/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.4_webpack@5.99.6_esbuild@0.25.3_/node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.4_webpack@5.99.6_esbuild@0.25.3_/node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),SegmentedControl_module=__webpack_require__("./node_modules/.pnpm/css-loader@6.11.0_webpack@5.99.6_esbuild@0.25.3_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./src/components/ui/segmented-control/SegmentedControl.module.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(SegmentedControl_module.A,options);const segmented_control_SegmentedControl_module=SegmentedControl_module.A&&SegmentedControl_module.A.locals?SegmentedControl_module.A.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js");const SegmentedControl=(0,react.forwardRef)((({options,value,defaultValue,onChange,size="md",color="primary",fullWidth=!1,iconsOnly=!1,disabled=!1,variant="outline",className,...props},ref)=>{const[selectedValue,setSelectedValue]=(0,react.useState)(defaultValue||(options[0]?.value??null)),isControlled=void 0!==value,currentValue=isControlled?value:selectedValue,handleSelect=(0,react.useCallback)((optionValue=>{disabled||(isControlled||setSelectedValue(optionValue),onChange?.(optionValue))}),[isControlled,onChange,disabled]),buttons=(0,react.useMemo)((()=>options.map((option=>(0,jsx_runtime.jsx)(Button.$,{variant:currentValue===option.value?"primary":variant,color,size,disabled:disabled||option.disabled,onClick:()=>handleSelect(option.value),icons:option.icon?{left:iconsOnly?void 0:option.icon,only:iconsOnly?option.icon:void 0}:void 0,"aria-pressed":currentValue===option.value,"aria-label":iconsOnly&&"string"==typeof option.label?option.label:void 0,children:!iconsOnly&&option.label},String(option.value))))),[options,currentValue,variant,color,size,disabled,iconsOnly,handleSelect]);return(0,jsx_runtime.jsx)("div",{ref,className:(0,classnames.cn)(segmented_control_SegmentedControl_module.segmentedControl,className),role:"group","aria-label":"Segmented Control",...props,children:(0,jsx_runtime.jsx)(ButtonGroup.e,{attached:!0,fullWidth,className:segmented_control_SegmentedControl_module.segmentedControlButtonGroup,children:buttons})})}));SegmentedControl.displayName="SegmentedControl";SegmentedControl.__docgenInfo={description:"SegmentedControl component for selecting one option from a small set of options.\n\n@example\n```tsx\nconst options = [\n  { value: 'day', label: 'Day' },\n  { value: 'week', label: 'Week' },\n  { value: 'month', label: 'Month' },\n];\n\nconst [view, setView] = useState('week');\n\n<SegmentedControl \n  options={options} \n  value={view} \n  onChange={setView} \n/>\n```",methods:[],displayName:"SegmentedControl",props:{options:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  /**\n   * The value of the segment option\n   */\n  value: T;\n  \n  /**\n   * The label to display for the segment option\n   */\n  label: React.ReactNode;\n  \n  /**\n   * Optional icon to display with the label\n   */\n  icon?: React.ReactNode;\n  \n  /**\n   * Whether this segment is disabled\n   */\n  disabled?: boolean;\n}",signature:{properties:[{key:"value",value:{name:"T",required:!0},description:"The value of the segment option"},{key:"label",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!0},description:"The label to display for the segment option"},{key:"icon",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:"Optional icon to display with the label"},{key:"disabled",value:{name:"boolean",required:!1},description:"Whether this segment is disabled"}]}}],raw:"SegmentOption<T>[]"},description:"The options to display in the segmented control"},value:{required:!1,tsType:{name:"T"},description:"The currently selected value"},defaultValue:{required:!1,tsType:{name:"T"},description:"Default value for uncontrolled usage"},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: T) => void",signature:{arguments:[{type:{name:"T"},name:"value"}],return:{name:"void"}}},description:"Callback when the selected value changes"},size:{required:!1,tsType:{name:"union",raw:"'xs' | 'sm' | 'md' | 'lg' | 'xl'",elements:[{name:"literal",value:"'xs'"},{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'xl'"}]},description:'The size of the segmented control\n@default "md"',defaultValue:{value:"'md'",computed:!1}},color:{required:!1,tsType:{name:"union",raw:"'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'info' | 'default'",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'success'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'danger'"},{name:"literal",value:"'info'"},{name:"literal",value:"'default'"}]},description:'The color scheme of the segmented control\n@default "primary"',defaultValue:{value:"'primary'",computed:!1}},fullWidth:{required:!1,tsType:{name:"boolean"},description:"Whether the control should take the full width of its container\n@default false",defaultValue:{value:"false",computed:!1}},iconsOnly:{required:!1,tsType:{name:"boolean"},description:"Whether to show icons only (no labels)\n@default false",defaultValue:{value:"false",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:"Whether the segmented control is disabled\n@default false",defaultValue:{value:"false",computed:!1}},variant:{required:!1,tsType:{name:"union",raw:"'outline' | 'ghost'",elements:[{name:"literal",value:"'outline'"},{name:"literal",value:"'ghost'"}]},description:'The visual style variant\n@default "outline"',defaultValue:{value:"'outline'",computed:!1}}},composes:["Omit"]};const DayIcon=()=>(0,jsx_runtime.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",children:[(0,jsx_runtime.jsx)("circle",{cx:"12",cy:"12",r:"5"}),(0,jsx_runtime.jsx)("line",{x1:"12",y1:"1",x2:"12",y2:"3"}),(0,jsx_runtime.jsx)("line",{x1:"12",y1:"21",x2:"12",y2:"23"}),(0,jsx_runtime.jsx)("line",{x1:"4.22",y1:"4.22",x2:"5.64",y2:"5.64"}),(0,jsx_runtime.jsx)("line",{x1:"18.36",y1:"18.36",x2:"19.78",y2:"19.78"}),(0,jsx_runtime.jsx)("line",{x1:"1",y1:"12",x2:"3",y2:"12"}),(0,jsx_runtime.jsx)("line",{x1:"21",y1:"12",x2:"23",y2:"12"}),(0,jsx_runtime.jsx)("line",{x1:"4.22",y1:"19.78",x2:"5.64",y2:"18.36"}),(0,jsx_runtime.jsx)("line",{x1:"18.36",y1:"5.64",x2:"19.78",y2:"4.22"})]}),WeekIcon=()=>(0,jsx_runtime.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",children:[(0,jsx_runtime.jsx)("rect",{x:"3",y:"4",width:"18",height:"18",rx:"2",ry:"2"}),(0,jsx_runtime.jsx)("line",{x1:"16",y1:"2",x2:"16",y2:"6"}),(0,jsx_runtime.jsx)("line",{x1:"8",y1:"2",x2:"8",y2:"6"}),(0,jsx_runtime.jsx)("line",{x1:"3",y1:"10",x2:"21",y2:"10"})]}),MonthIcon=()=>(0,jsx_runtime.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",children:[(0,jsx_runtime.jsx)("rect",{x:"3",y:"4",width:"18",height:"18",rx:"2",ry:"2"}),(0,jsx_runtime.jsx)("line",{x1:"16",y1:"2",x2:"16",y2:"6"}),(0,jsx_runtime.jsx)("line",{x1:"8",y1:"2",x2:"8",y2:"6"}),(0,jsx_runtime.jsx)("line",{x1:"3",y1:"10",x2:"21",y2:"10"}),(0,jsx_runtime.jsx)("path",{d:"M8 14h.01"}),(0,jsx_runtime.jsx)("path",{d:"M12 14h.01"}),(0,jsx_runtime.jsx)("path",{d:"M16 14h.01"}),(0,jsx_runtime.jsx)("path",{d:"M8 18h.01"}),(0,jsx_runtime.jsx)("path",{d:"M12 18h.01"}),(0,jsx_runtime.jsx)("path",{d:"M16 18h.01"})]}),GridIcon=()=>(0,jsx_runtime.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",children:[(0,jsx_runtime.jsx)("rect",{x:"3",y:"3",width:"7",height:"7"}),(0,jsx_runtime.jsx)("rect",{x:"14",y:"3",width:"7",height:"7"}),(0,jsx_runtime.jsx)("rect",{x:"14",y:"14",width:"7",height:"7"}),(0,jsx_runtime.jsx)("rect",{x:"3",y:"14",width:"7",height:"7"})]}),ListIcon=()=>(0,jsx_runtime.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",children:[(0,jsx_runtime.jsx)("line",{x1:"8",y1:"6",x2:"21",y2:"6"}),(0,jsx_runtime.jsx)("line",{x1:"8",y1:"12",x2:"21",y2:"12"}),(0,jsx_runtime.jsx)("line",{x1:"8",y1:"18",x2:"21",y2:"18"}),(0,jsx_runtime.jsx)("line",{x1:"3",y1:"6",x2:"3.01",y2:"6"}),(0,jsx_runtime.jsx)("line",{x1:"3",y1:"12",x2:"3.01",y2:"12"}),(0,jsx_runtime.jsx)("line",{x1:"3",y1:"18",x2:"3.01",y2:"18"})]}),SegmentedControl_stories={title:"UI/Button/SegmentedControl",component:SegmentedControl,tags:["autodocs"],argTypes:{options:{control:"object",description:"The options to display in the segmented control"},value:{control:"text",description:"The currently selected value"},defaultValue:{control:"text",description:"Default value for uncontrolled usage"},size:{control:"select",options:["xs","sm","md","lg","xl"],description:"The size of the segmented control"},color:{control:"select",options:["primary","secondary","success","warning","danger","info","default"],description:"The color scheme of the segmented control"},fullWidth:{control:"boolean",description:"Whether the control should take the full width of its container"},iconsOnly:{control:"boolean",description:"Whether to show icons only (no labels)"},disabled:{control:"boolean",description:"Whether the segmented control is disabled"},variant:{control:"select",options:["outline","ghost"],description:"The visual style variant"}},parameters:{docs:{description:{component:"SegmentedControl component for selecting one option from a small set of options."}}}},Default={render:()=>{const[value,setValue]=(0,react.useState)("week");return(0,jsx_runtime.jsx)(SegmentedControl,{options:[{value:"day",label:"Day"},{value:"week",label:"Week"},{value:"month",label:"Month"}],value,onChange:setValue})}},WithIcons={render:()=>{const[value,setValue]=(0,react.useState)("week"),options=[{value:"day",label:"Day",icon:(0,jsx_runtime.jsx)(DayIcon,{})},{value:"week",label:"Week",icon:(0,jsx_runtime.jsx)(WeekIcon,{})},{value:"month",label:"Month",icon:(0,jsx_runtime.jsx)(MonthIcon,{})}];return(0,jsx_runtime.jsx)(SegmentedControl,{options,value,onChange:setValue})}},IconsOnly={render:()=>{const[value,setValue]=(0,react.useState)("grid"),options=[{value:"grid",label:"Grid View",icon:(0,jsx_runtime.jsx)(GridIcon,{})},{value:"list",label:"List View",icon:(0,jsx_runtime.jsx)(ListIcon,{})}];return(0,jsx_runtime.jsx)(SegmentedControl,{options,value,onChange:setValue,iconsOnly:!0})}},Sizes={render:()=>{const options=[{value:"day",label:"Day"},{value:"week",label:"Week"},{value:"month",label:"Month"}];return(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)(SegmentedControl,{options,defaultValue:"week",size:"xs"}),(0,jsx_runtime.jsx)(SegmentedControl,{options,defaultValue:"week",size:"sm"}),(0,jsx_runtime.jsx)(SegmentedControl,{options,defaultValue:"week",size:"md"}),(0,jsx_runtime.jsx)(SegmentedControl,{options,defaultValue:"week",size:"lg"}),(0,jsx_runtime.jsx)(SegmentedControl,{options,defaultValue:"week",size:"xl"})]})}},Colors={render:()=>{const options=[{value:"day",label:"Day"},{value:"week",label:"Week"},{value:"month",label:"Month"}];return(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)(SegmentedControl,{options,defaultValue:"week",color:"primary"}),(0,jsx_runtime.jsx)(SegmentedControl,{options,defaultValue:"week",color:"secondary"}),(0,jsx_runtime.jsx)(SegmentedControl,{options,defaultValue:"week",color:"success"}),(0,jsx_runtime.jsx)(SegmentedControl,{options,defaultValue:"week",color:"warning"}),(0,jsx_runtime.jsx)(SegmentedControl,{options,defaultValue:"week",color:"danger"}),(0,jsx_runtime.jsx)(SegmentedControl,{options,defaultValue:"week",color:"info"})]})}},FullWidth={render:()=>(0,jsx_runtime.jsx)(SegmentedControl,{options:[{value:"day",label:"Day"},{value:"week",label:"Week"},{value:"month",label:"Month"}],defaultValue:"week",fullWidth:!0})},GhostVariant={render:()=>(0,jsx_runtime.jsx)(SegmentedControl,{options:[{value:"day",label:"Day"},{value:"week",label:"Week"},{value:"month",label:"Month"}],defaultValue:"week",variant:"ghost"})},DisabledState={render:()=>(0,jsx_runtime.jsx)(SegmentedControl,{options:[{value:"day",label:"Day"},{value:"week",label:"Week"},{value:"month",label:"Month"}],defaultValue:"week",disabled:!0})},IndividualDisabledOptions={render:()=>(0,jsx_runtime.jsx)(SegmentedControl,{options:[{value:"day",label:"Day"},{value:"week",label:"Week"},{value:"month",label:"Month",disabled:!0}],defaultValue:"week"})},RealWorldExample={render:()=>{const[timeRange,setTimeRange]=(0,react.useState)("30d");return(0,jsx_runtime.jsxs)("div",{className:"p-4 border rounded-md",children:[(0,jsx_runtime.jsx)("div",{className:"mb-2 text-sm font-medium",children:"Time Range"}),(0,jsx_runtime.jsx)(SegmentedControl,{options:[{value:"24h",label:"24h"},{value:"7d",label:"7d"},{value:"30d",label:"30d"},{value:"90d",label:"90d"},{value:"custom",label:"Custom"}],value:timeRange,onChange:setTimeRange,size:"sm"})]})}},Playground={args:{options:[{value:"day",label:"Day"},{value:"week",label:"Week"},{value:"month",label:"Month"}],defaultValue:"week",size:"md",color:"primary",fullWidth:!1,iconsOnly:!1,disabled:!1,variant:"outline"}},__namedExportsOrder=["Default","WithIcons","IconsOnly","Sizes","Colors","FullWidth","GhostVariant","DisabledState","IndividualDisabledOptions","RealWorldExample","Playground"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [value, setValue] = useState('week');\n    const options = [{\n      value: 'day',\n      label: 'Day'\n    }, {\n      value: 'week',\n      label: 'Week'\n    }, {\n      value: 'month',\n      label: 'Month'\n    }];\n    return <SegmentedControl options={options} value={value} onChange={setValue} />;\n  }\n}",...Default.parameters?.docs?.source}}},WithIcons.parameters={...WithIcons.parameters,docs:{...WithIcons.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [value, setValue] = useState('week');\n    const options = [{\n      value: 'day',\n      label: 'Day',\n      icon: <DayIcon />\n    }, {\n      value: 'week',\n      label: 'Week',\n      icon: <WeekIcon />\n    }, {\n      value: 'month',\n      label: 'Month',\n      icon: <MonthIcon />\n    }];\n    return <SegmentedControl options={options} value={value} onChange={setValue} />;\n  }\n}",...WithIcons.parameters?.docs?.source}}},IconsOnly.parameters={...IconsOnly.parameters,docs:{...IconsOnly.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [value, setValue] = useState('grid');\n    const options = [{\n      value: 'grid',\n      label: 'Grid View',\n      icon: <GridIcon />\n    }, {\n      value: 'list',\n      label: 'List View',\n      icon: <ListIcon />\n    }];\n    return <SegmentedControl options={options} value={value} onChange={setValue} iconsOnly />;\n  }\n}",...IconsOnly.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const options = [{\n      value: \'day\',\n      label: \'Day\'\n    }, {\n      value: \'week\',\n      label: \'Week\'\n    }, {\n      value: \'month\',\n      label: \'Month\'\n    }];\n    return <div className="space-y-4">\r\n        <SegmentedControl options={options} defaultValue="week" size="xs" />\r\n        \r\n        <SegmentedControl options={options} defaultValue="week" size="sm" />\r\n        \r\n        <SegmentedControl options={options} defaultValue="week" size="md" />\r\n        \r\n        <SegmentedControl options={options} defaultValue="week" size="lg" />\r\n        \r\n        <SegmentedControl options={options} defaultValue="week" size="xl" />\r\n      </div>;\n  }\n}',...Sizes.parameters?.docs?.source}}},Colors.parameters={...Colors.parameters,docs:{...Colors.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const options = [{\n      value: \'day\',\n      label: \'Day\'\n    }, {\n      value: \'week\',\n      label: \'Week\'\n    }, {\n      value: \'month\',\n      label: \'Month\'\n    }];\n    return <div className="space-y-4">\r\n        <SegmentedControl options={options} defaultValue="week" color="primary" />\r\n        \r\n        <SegmentedControl options={options} defaultValue="week" color="secondary" />\r\n        \r\n        <SegmentedControl options={options} defaultValue="week" color="success" />\r\n        \r\n        <SegmentedControl options={options} defaultValue="week" color="warning" />\r\n        \r\n        <SegmentedControl options={options} defaultValue="week" color="danger" />\r\n        \r\n        <SegmentedControl options={options} defaultValue="week" color="info" />\r\n      </div>;\n  }\n}',...Colors.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const options = [{\n      value: 'day',\n      label: 'Day'\n    }, {\n      value: 'week',\n      label: 'Week'\n    }, {\n      value: 'month',\n      label: 'Month'\n    }];\n    return <SegmentedControl options={options} defaultValue=\"week\" fullWidth />;\n  }\n}",...FullWidth.parameters?.docs?.source}}},GhostVariant.parameters={...GhostVariant.parameters,docs:{...GhostVariant.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const options = [{\n      value: 'day',\n      label: 'Day'\n    }, {\n      value: 'week',\n      label: 'Week'\n    }, {\n      value: 'month',\n      label: 'Month'\n    }];\n    return <SegmentedControl options={options} defaultValue=\"week\" variant=\"ghost\" />;\n  }\n}",...GhostVariant.parameters?.docs?.source}}},DisabledState.parameters={...DisabledState.parameters,docs:{...DisabledState.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const options = [{\n      value: 'day',\n      label: 'Day'\n    }, {\n      value: 'week',\n      label: 'Week'\n    }, {\n      value: 'month',\n      label: 'Month'\n    }];\n    return <SegmentedControl options={options} defaultValue=\"week\" disabled />;\n  }\n}",...DisabledState.parameters?.docs?.source}}},IndividualDisabledOptions.parameters={...IndividualDisabledOptions.parameters,docs:{...IndividualDisabledOptions.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const options = [{\n      value: 'day',\n      label: 'Day'\n    }, {\n      value: 'week',\n      label: 'Week'\n    }, {\n      value: 'month',\n      label: 'Month',\n      disabled: true\n    }];\n    return <SegmentedControl options={options} defaultValue=\"week\" />;\n  }\n}",...IndividualDisabledOptions.parameters?.docs?.source}}},RealWorldExample.parameters={...RealWorldExample.parameters,docs:{...RealWorldExample.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [timeRange, setTimeRange] = useState('30d');\n    const options = [{\n      value: '24h',\n      label: '24h'\n    }, {\n      value: '7d',\n      label: '7d'\n    }, {\n      value: '30d',\n      label: '30d'\n    }, {\n      value: '90d',\n      label: '90d'\n    }, {\n      value: 'custom',\n      label: 'Custom'\n    }];\n    return <div className=\"p-4 border rounded-md\">\r\n        <div className=\"mb-2 text-sm font-medium\">Time Range</div>\r\n        <SegmentedControl options={options} value={timeRange} onChange={setTimeRange} size=\"sm\" />\r\n      </div>;\n  }\n}",...RealWorldExample.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: [{\n      value: 'day',\n      label: 'Day'\n    }, {\n      value: 'week',\n      label: 'Week'\n    }, {\n      value: 'month',\n      label: 'Month'\n    }],\n    defaultValue: 'week',\n    size: 'md',\n    color: 'primary',\n    fullWidth: false,\n    iconsOnly: false,\n    disabled: false,\n    variant: 'outline'\n  }\n}",...Playground.parameters?.docs?.source}}}}}]);